{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('react'), require('react-dom')) : typeof define === 'function' && define.amd ? define(['react', 'react-dom'], factory) : global.reactMobileDatePicker = factory(global.React, global.ReactDOM);\n})(this, function (React, ReactDOM) {\n  'use strict';\n\n  function __$styleInject(css, ref) {\n    if (ref === void 0) ref = {};\n    var insertAt = ref.insertAt;\n    if (!css || typeof document === 'undefined') {\n      return;\n    }\n    var head = document.head || document.getElementsByTagName('head')[0];\n    var style = document.createElement('style');\n    style.type = 'text/css';\n    if (insertAt === 'top') {\n      if (head.firstChild) {\n        head.insertBefore(style, head.firstChild);\n      } else {\n        head.appendChild(style);\n      }\n    } else {\n      head.appendChild(style);\n    }\n    if (style.styleSheet) {\n      style.styleSheet.cssText = css;\n    } else {\n      style.appendChild(document.createTextNode(css));\n    }\n  }\n  var React__default = 'default' in React ? React['default'] : React;\n  ReactDOM = ReactDOM && ReactDOM.hasOwnProperty('default') ? ReactDOM['default'] : ReactDOM;\n  __$styleInject(\".datepicker-modal {\\n    position: absolute;\\n    right: 0;\\n    bottom: 0;\\n    width: 100%;\\n    height: 100%;\\n    background-color: rgba(0, 0, 0, .6);\\n    z-index: 999;\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-align: center;\\n        -ms-flex-align: center;\\n            align-items: center;\\n    -webkit-box-pack: center;\\n        -ms-flex-pack: center;\\n            justify-content: center;\\n}\\n\\n.datepicker {\\n    position: absolute;\\n    left: 0;\\n    bottom: 0;\\n    width: 100%;\\n    z-index: 1;\\n    font-size: 16px;\\n    text-align: center;\\n    font-family: arial,verdana,sans-serif;\\n    -webkit-box-sizing: content-box;\\n            box-sizing: content-box;\\n    -webkit-font-smoothing: antialiased;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n}\\n\\n.datepicker .datepicker-header {\\n        padding: 0 .5em;\\n        min-height: 2em;\\n        line-height: 2em;\\n        font-size: 1.125em;\\n    }\\n\\n.datepicker .datepicker-navbar {\\n        padding: 0 .5em .5em .5em;\\n        overflow: hidden;\\n    }\\n\\n.datepicker .datepicker-navbar-btn {\\n        height: 2.5em;\\n        line-height: 2.5em;\\n        float: right;\\n        padding: 0 1em;\\n        cursor: pointer;\\n    }\\n\\n.datepicker .datepicker-caption {\\n        display: -webkit-box;\\n        display: -ms-flexbox;\\n        display: flex;\\n        padding: .5em .25em;\\n    }\\n\\n.datepicker .datepicker-caption-item {\\n        -webkit-box-flex: 1;\\n            -ms-flex: 1;\\n                flex: 1;\\n        margin: 0 .25em;\\n        height: 40px;\\n        line-height: 40px;\\n        font-size: 1.2em;\\n    }\\n\\n.datepicker .datepicker-content {\\n        display: -webkit-box;\\n        display: -ms-flexbox;\\n        display: flex;\\n        padding: .5em .25em;\\n    }\\n\\n.datepicker .datepicker-col-1 {\\n        -webkit-box-flex: 1;\\n            -ms-flex: 1;\\n                flex: 1;\\n        margin: 0 .25em;\\n    }\\n\\n.datepicker .datepicker-viewport {\\n        height: 200px;\\n        position: relative;\\n        overflow: hidden\\n    }\\n\\n.datepicker .datepicker-viewport::after {\\n    content: '';\\n    position: absolute;\\n    z-index: 2;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    pointer-events: none;\\n}\\n\\n.datepicker .datepicker-wheel {\\n        position: absolute;\\n        height: 40px;\\n        top: 50%;\\n        margin-top: -20px;\\n        width: 100%;\\n    }\\n\\n.datepicker .datepicker-scroll {\\n        list-style-type: none;\\n        padding: 0\\n    }\\n\\n.datepicker .datepicker-scroll>li {\\n    height: 40px;\\n    line-height: 40px;\\n    font-size: 1.375em;\\n    cursor: pointer;\\n}\\n\\n.datepicker {\\n\\n    /* default */\\n}\\n\\n.datepicker.default {\\n    background-color: #f7f7f7;\\n}\\n\\n.datepicker.default .datepicker-header {\\n            color: #4eccc4;\\n}\\n\\n.datepicker.default .datepicker-wheel {\\n            border-top: 1px solid #4eccc4;\\n            border-bottom: 1px solid #4eccc4;\\n}\\n\\n.datepicker.default .datepicker-caption-item {\\n            color: rgb(59, 59, 59);\\n}\\n\\n.datepicker.default .datepicker-scroll li {\\n                color: rgb(59, 59, 59);\\n            }\\n\\n.datepicker.default .datepicker-scroll li.disabled {\\n                color: rgb(191, 191, 191);\\n            }\\n\\n.datepicker.default .datepicker-navbar-btn {\\n            color: #4eccc4;\\n}\\n\\n.datepicker {\\n\\n    /* dark */\\n}\\n\\n.datepicker.dark {\\n    background-color: #263238;\\n}\\n\\n.datepicker.dark .datepicker-header {\\n            color: #50ccc4;\\n}\\n\\n.datepicker.dark .datepicker-wheel {\\n            border-top: 1px solid #50ccc4;\\n            border-bottom: 1px solid #50ccc4;\\n}\\n\\n.datepicker.dark .datepicker-caption-item {\\n            color: rgb(201, 203, 204);\\n}\\n\\n.datepicker.dark .datepicker-scroll li {\\n                color: rgb(201, 203, 204);\\n            }\\n\\n.datepicker.dark .datepicker-scroll li.disabled {\\n                color: rgb(87, 96, 100);\\n            }\\n\\n.datepicker.dark .datepicker-navbar-btn {\\n            color: #50ccc4;\\n}\\n\\n.datepicker {\\n\\n    /* ios */\\n}\\n\\n.datepicker.ios {\\n    background-color: #f7f7f7;\\n}\\n\\n.datepicker.ios .datepicker-col-1 {margin: 0;\\n}\\n\\n.datepicker.ios .datepicker-header {\\n            color: rgb(59, 59, 59);\\n            padding: 0 3.5em;\\n}\\n\\n.datepicker.ios .datepicker-viewport::after {\\n    background: -webkit-gradient(linear,left top, left bottom,from(#f7f7f7),color-stop(52%, rgba(245, 245, 245, 0)),color-stop(48%, rgba(245, 245, 245, 0)),to(#f7f7f7));\\n    background: linear-gradient(#f7f7f7,rgba(245, 245, 245, 0)52%,rgba(245, 245, 245, 0)48%,#f7f7f7);\\n}\\n\\n.datepicker.ios .datepicker-wheel {\\n            border-top: 1px solid #dbdbdb;\\n            border-bottom: 1px solid #dbdbdb;\\n}\\n\\n.datepicker.ios .datepicker-caption-item {\\n            color: rgb(59, 59, 59);\\n}\\n\\n.datepicker.ios .datepicker-scroll li {\\n                color: rgb(59, 59, 59);\\n            }\\n\\n.datepicker.ios .datepicker-scroll li.disabled {\\n                color: rgb(191, 191, 191);\\n            }\\n\\n.datepicker.ios .datepicker-navbar {\\n            position: absolute;\\n            z-index: 2;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            padding: 0;\\n            border-bottom: 1px solid #acacac;\\n}\\n\\n.datepicker.ios .datepicker-navbar-btn {\\n            color: #007aff;\\n}\\n\\n.datepicker.ios .datepicker-navbar-btn:nth-child(2) {\\n    float: left;\\n}\\n\\n.datepicker.ios .datepicker-content {\\n            padding-top: 48px;\\n}\\n\\n.datepicker.ios .datepicker-header + .datepicker-content {\\n          padding-top: 0;\\n}\\n\\n.datepicker.ios .datepicker-caption + .datepicker-content {\\n          padding-top: 0;\\n}\\n\\n.datepicker {\\n\\n    /* android */\\n}\\n\\n.datepicker.android, .datepicker.android-dark {\\n    background-color: #f5f5f5;\\n}\\n\\n.datepicker.android .datepicker-header, .datepicker.android-dark .datepicker-header {\\n            color: #31b6e7;\\n            border-bottom: 2px solid #31b6e7;\\n}\\n\\n.datepicker.android .datepicker-col-1, .datepicker.android-dark .datepicker-col-1 {margin: 0 .625em;\\n}\\n\\n.datepicker.android .datepicker-viewport::after, .datepicker.android-dark .datepicker-viewport::after {\\n    background-image: -webkit-gradient(linear,left top, left bottom,from(#f5f5f5),color-stop(52%, rgba(245, 245, 245, 0)),color-stop(48%, rgba(245, 245, 245, 0)),to(#f5f5f5));\\n    background-image: linear-gradient(#f5f5f5,rgba(245, 245, 245, 0)52%,rgba(245, 245, 245, 0)48%,#f5f5f5);\\n}\\n\\n.datepicker.android .datepicker-wheel, .datepicker.android-dark .datepicker-wheel {\\n            border-top: 2px solid #31b6e7;\\n            border-bottom: 2px solid #31b6e7;\\n}\\n\\n.datepicker.android .datepicker-caption-item, .datepicker.android-dark .datepicker-caption-item {\\n            color: rgb(56, 56, 56);\\n}\\n\\n.datepicker.android .datepicker-scroll li, .datepicker.android-dark .datepicker-scroll li {\\n                font-size: 1.125em;\\n                color: rgb(56, 56, 56);\\n            }\\n\\n.datepicker.android .datepicker-scroll li.disabled, .datepicker.android-dark .datepicker-scroll li.disabled {\\n                color: rgb(188, 188, 188);\\n            }\\n\\n.datepicker.android .datepicker-navbar, .datepicker.android-dark .datepicker-navbar {\\n            display: -webkit-box;\\n            display: -ms-flexbox;\\n            display: flex;\\n            border-top: 1px solid #d9d4d4;\\n            padding: 0;\\n}\\n\\n.datepicker.android .datepicker-navbar-btn, .datepicker.android-dark .datepicker-navbar-btn {\\n            padding: 0;\\n            color: #000;\\n            -webkit-box-flex: 1;\\n                -ms-flex: 1;\\n                    flex: 1;\\n}\\n\\n.datepicker.android .datepicker-navbar-btn:nth-child(2), .datepicker.android-dark .datepicker-navbar-btn:nth-child(2) {\\n    border-left: 1px solid #d9d4d4;\\n}\\n\\n.datepicker {\\n\\n    /* android-dark */\\n}\\n\\n.datepicker.android-dark {\\n    background-color: #292829;\\n}\\n\\n.datepicker.android-dark .datepicker-viewport::after {\\n    background-image: -webkit-gradient(linear,left top, left bottom,from(#282828),color-stop(52%, rgba(40, 40, 40, 0)),color-stop(48%, rgba(40, 40, 40, 0)),to(#282828));\\n    background-image: linear-gradient(#282828,rgba(40, 40, 40, 0)52%,rgba(40, 40, 40, 0)48%,#282828);\\n}\\n\\n.datepicker.android-dark .datepicker-caption-item {\\n            color: rgb(199, 199, 199);\\n}\\n\\n.datepicker.android-dark .datepicker-scroll li {\\n                color: rgb(199, 199, 199);\\n            }\\n\\n.datepicker.android-dark .datepicker-scroll li.disabled {\\n                color: rgb(88, 88, 88);\\n            }\\n\\n.datepicker.android-dark .datepicker-navbar { border-color: #424542;\\n}\\n\\n.datepicker.android-dark .datepicker-navbar-btn {\\n            color: #fff;\\n}\\n\\n.datepicker.android-dark .datepicker-navbar-btn:nth-child(2) {\\n    border-color: #424542;\\n}\\n\", {});\n\n  /**\n   * @module time工具\n   */\n\n  function throwIfInvalidDate(date) {\n    if (Object.prototype.toString.call(date, null) !== '[object Date]') {\n      throw new Error('参数类型不对');\n    }\n  }\n  function daysInMonth(year, month) {\n    return new Date(year, month + 1, 0).getDate();\n  }\n\n  /**\n   * 对Date的扩展，将 Date 转化为指定格式的String\n   * @param  {Date}       日期\n   * @return {String}     字符串格式\n   */\n  function convertDate(date, format) {\n    var str = format;\n    var o = {\n      'M+': date.getMonth() + 1,\n      'D+': date.getDate(),\n      'h+': date.getHours(),\n      'm+': date.getMinutes(),\n      's+': date.getSeconds()\n    };\n    if (/(Y+)/.test(format)) {\n      str = str.replace(RegExp.$1, date.getFullYear().toString().substr(4 - RegExp.$1.length));\n    }\n    for (var k in o) {\n      // eslint-disable-line\n      if (new RegExp('(' + k + ')').test(format)) {\n        str = str.replace(RegExp.$1, RegExp.$1.length === 1 ? o[k] : ('00' + o[k]).substr(o[k].toString().length));\n      }\n    }\n    return str;\n  }\n\n  /**\n   * 获取相对日期的偏移日期\n   * @param  {Date}       日期\n   * @return {number}     相对的天数\n   */\n  function nextYear(now) {\n    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    throwIfInvalidDate(now);\n    var date = new Date(now.getFullYear() + index, now.getMonth(), now.getDate(), now.getHours(), now.getMinutes(), now.getSeconds());\n    return date;\n  }\n  function nextMonth(now) {\n    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    throwIfInvalidDate(now);\n    var year = now.getFullYear();\n    var month = now.getMonth() + index;\n    var dayOfMonth = Math.min(now.getDate(), daysInMonth(year, month));\n    var date = new Date(year, month, dayOfMonth, now.getHours(), now.getMinutes(), now.getSeconds());\n    return date;\n  }\n  function nextDate(now) {\n    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    throwIfInvalidDate(now);\n    var date = new Date(now.getTime() + index * 24 * 60 * 60 * 1000);\n    return date;\n  }\n  function nextHour(now) {\n    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    throwIfInvalidDate(now);\n    var date = new Date(now.getTime() + index * 60 * 60 * 1000);\n    return date;\n  }\n  function nextMinute(now) {\n    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    throwIfInvalidDate(now);\n    var date = new Date(now.getTime() + index * 60 * 1000);\n    return date;\n  }\n  function nextSecond(now) {\n    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    throwIfInvalidDate(now);\n    var date = new Date(now.getTime() + index * 1000);\n    return date;\n  }\n  var TimeUtil = Object.freeze({\n    convertDate: convertDate,\n    nextYear: nextYear,\n    nextMonth: nextMonth,\n    nextDate: nextDate,\n    nextHour: nextHour,\n    nextMinute: nextMinute,\n    nextSecond: nextSecond\n  });\n  function shallowEqual(prev, next) {\n    if (prev === next) return true;\n    var prevKeys = Object.keys(prev);\n    var nextKeys = Object.keys(next);\n    if (prevKeys.length !== nextKeys.length) return false;\n    return prevKeys.every(function (key) {\n      return prev.hasOwnProperty(key) && prev[key] === next[key];\n    });\n  }\n  function PureRender(Component$$1) {\n    Component$$1.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n      return PureRender.shouldComponentUpdate(nextProps, nextState, this.props, this.state);\n    };\n  }\n  PureRender.shouldComponentUpdate = function (nextProps, nextState, preProps, preState) {\n    return !shallowEqual(preProps, nextProps) || !shallowEqual(preState, nextState);\n  };\n\n  /**\n   * 驼峰写法\n   * @param  {String} str 要转化的字符串\n   * @return {String}     转化后的字符串\n   */\n  function camelCase(str) {\n    return str.replace(/-([a-z])/g, function ($0, $1) {\n      return $1.toUpperCase();\n    }).replace('-', '');\n  }\n\n  /**\n   * 格式化css属性对象\n   * @param  {Object} props 属性对象\n   * @return {Object}       添加前缀的格式化属性对象\n   */\n  function formatCss(props) {\n    var prefixs = ['-webkit-', '-moz-', '-ms-'];\n    var result = {};\n    var regPrefix = /transform|transition/;\n    for (var key in props) {\n      if (props.hasOwnProperty(key)) {\n        var styleValue = props[key];\n\n        // 如果检测是transform或transition属性\n        if (regPrefix.test(key)) {\n          for (var i = 0; i < prefixs.length; i++) {\n            var styleName = camelCase(prefixs[i] + key);\n            result[styleName] = styleValue.replace(regPrefix, prefixs[i] + '$&');\n          }\n        }\n        result[key] = styleValue;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * 为元素添加css样式\n   * @param {Object} element 目标元素\n   * @param {Object} props   css属性对象\n   */\n  function addPrefixCss(element, props) {\n    var formatedProps = formatCss(props);\n    for (var key in formatedProps) {\n      if (formatedProps.hasOwnProperty(key)) {\n        element.style[key] = formatedProps[key];\n      }\n    }\n  }\n  var asyncGenerator = function () {\n    function AwaitValue(value) {\n      this.value = value;\n    }\n    function AsyncGenerator(gen) {\n      var front, back;\n      function send(key, arg) {\n        return new Promise(function (resolve, reject) {\n          var request = {\n            key: key,\n            arg: arg,\n            resolve: resolve,\n            reject: reject,\n            next: null\n          };\n          if (back) {\n            back = back.next = request;\n          } else {\n            front = back = request;\n            resume(key, arg);\n          }\n        });\n      }\n      function resume(key, arg) {\n        try {\n          var result = gen[key](arg);\n          var value = result.value;\n          if (value instanceof AwaitValue) {\n            Promise.resolve(value.value).then(function (arg) {\n              resume(\"next\", arg);\n            }, function (arg) {\n              resume(\"throw\", arg);\n            });\n          } else {\n            settle(result.done ? \"return\" : \"normal\", result.value);\n          }\n        } catch (err) {\n          settle(\"throw\", err);\n        }\n      }\n      function settle(type, value) {\n        switch (type) {\n          case \"return\":\n            front.resolve({\n              value: value,\n              done: true\n            });\n            break;\n          case \"throw\":\n            front.reject(value);\n            break;\n          default:\n            front.resolve({\n              value: value,\n              done: false\n            });\n            break;\n        }\n        front = front.next;\n        if (front) {\n          resume(front.key, front.arg);\n        } else {\n          back = null;\n        }\n      }\n      this._invoke = send;\n      if (typeof gen.return !== \"function\") {\n        this.return = undefined;\n      }\n    }\n    if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n      AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n        return this;\n      };\n    }\n    AsyncGenerator.prototype.next = function (arg) {\n      return this._invoke(\"next\", arg);\n    };\n    AsyncGenerator.prototype.throw = function (arg) {\n      return this._invoke(\"throw\", arg);\n    };\n    AsyncGenerator.prototype.return = function (arg) {\n      return this._invoke(\"return\", arg);\n    };\n    return {\n      wrap: function (fn) {\n        return function () {\n          return new AsyncGenerator(fn.apply(this, arguments));\n        };\n      },\n      await: function (value) {\n        return new AwaitValue(value);\n      }\n    };\n  }();\n  var classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n  var createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  var inherits = function (subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  };\n  var objectWithoutProperties = function (obj, keys) {\n    var target = {};\n    for (var i in obj) {\n      if (keys.indexOf(i) >= 0) continue;\n      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n      target[i] = obj[i];\n    }\n    return target;\n  };\n  var possibleConstructorReturn = function (self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  };\n  var toArray = function (arr) {\n    return Array.isArray(arr) ? arr : Array.from(arr);\n  };\n  var toConsumableArray = function (arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  };\n\n  /**\n   * @module Date组件\n   */\n  var DATE_HEIGHT = 40; // 每个日期的高度\n  var DATE_LENGTH = 10; // 日期的个数\n  var MIDDLE_INDEX = Math.floor(DATE_LENGTH / 2); // 日期数组中间值的索引\n  var MIDDLE_Y = -DATE_HEIGHT * MIDDLE_INDEX; // translateY值\n\n  var isUndefined = function isUndefined(val) {\n    return typeof val === 'undefined';\n  };\n  var isFunction = function isFunction(val) {\n    return Object.prototype.toString.apply(val) === '[object Function]';\n  };\n\n  /**\n   * Class Date组件类\n   * @extends Component\n   */\n  var DatePickerItem = function (_Component) {\n    inherits(DatePickerItem, _Component);\n    function DatePickerItem(props) {\n      classCallCheck(this, DatePickerItem);\n      var _this = possibleConstructorReturn(this, (DatePickerItem.__proto__ || Object.getPrototypeOf(DatePickerItem)).call(this, props));\n      _this.animating = false; // 判断是否在transition过渡动画之中\n      _this.touchY = 0; // 保存touchstart的pageY\n      _this.translateY = 0; // 容器偏移的距离\n      _this.currentIndex = MIDDLE_INDEX; // 滑动中当前日期的索引\n      _this.moveDateCount = 0; // 一次滑动移动了多少个时间\n\n      _this.state = {\n        translateY: MIDDLE_Y,\n        marginTop: (_this.currentIndex - MIDDLE_INDEX) * DATE_HEIGHT\n      };\n      _this.renderDatepickerItem = _this.renderDatepickerItem.bind(_this);\n      _this.handleContentTouch = _this.handleContentTouch.bind(_this);\n      _this.handleContentMouseDown = _this.handleContentMouseDown.bind(_this);\n      _this.handleContentMouseMove = _this.handleContentMouseMove.bind(_this);\n      _this.handleContentMouseUp = _this.handleContentMouseUp.bind(_this);\n      return _this;\n    }\n    createClass(DatePickerItem, [{\n      key: 'componentWillMount',\n      value: function componentWillMount() {\n        this._iniDates(this.props.value);\n      }\n    }, {\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        var viewport = this.viewport;\n        viewport.addEventListener('touchstart', this.handleContentTouch, false);\n        viewport.addEventListener('touchmove', this.handleContentTouch, false);\n        viewport.addEventListener('touchend', this.handleContentTouch, false);\n        viewport.addEventListener('mousedown', this.handleContentMouseDown, false);\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(nextProps) {\n        if (nextProps.value.getTime() === this.props.value.getTime()) {\n          return;\n        }\n        this._iniDates(nextProps.value);\n        this.currentIndex = MIDDLE_INDEX;\n        this.setState({\n          translateY: MIDDLE_Y,\n          marginTop: (this.currentIndex - MIDDLE_INDEX) * DATE_HEIGHT\n        });\n      }\n\n      /**\n       * Optimization component, Prevents unnecessary rendering\n       * Only value or state change should re-rendering\n       *\n       * @param  {Object} nextProps next props\n       * @param  {Object} nextState next state\n       * @return {Boolean}          Whether re-rendering\n       */\n    }, {\n      key: 'shouldComponentUpdate',\n      value: function shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.value.getTime() !== this.props.value.getTime() || !shallowEqual(nextState, this.state);\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        var viewport = this.viewport;\n        viewport.removeEventListener('touchstart', this.handleContentTouch, false);\n        viewport.removeEventListener('touchmove', this.handleContentTouch, false);\n        viewport.removeEventListener('touchend', this.handleContentTouch, false);\n        viewport.removeEventListener('mousedown', this.handleContentMouseDown, false);\n      }\n    }, {\n      key: '_iniDates',\n      value: function _iniDates(date) {\n        var _this2 = this;\n        var typeName = this.props.type;\n        var dates = Array.apply(undefined, toConsumableArray(Array(DATE_LENGTH))).map(function (value, index) {\n          return TimeUtil['next' + typeName](date, (index - MIDDLE_INDEX) * _this2.props.step);\n        });\n        this.setState({\n          dates: dates\n        });\n      }\n    }, {\n      key: '_updateDates',\n      value: function _updateDates(direction) {\n        var typeName = this.props.type;\n        var dates = this.state.dates;\n        if (direction === 1) {\n          this.currentIndex++;\n          this.setState({\n            dates: [].concat(toConsumableArray(dates.slice(1)), [TimeUtil['next' + typeName](dates[dates.length - 1], this.props.step)]),\n            marginTop: (this.currentIndex - MIDDLE_INDEX) * DATE_HEIGHT\n          });\n        } else {\n          this.currentIndex--;\n          this.setState({\n            dates: [TimeUtil['next' + typeName](dates[0], -this.props.step)].concat(toConsumableArray(dates.slice(0, dates.length - 1))),\n            marginTop: (this.currentIndex - MIDDLE_INDEX) * DATE_HEIGHT\n          });\n        }\n      }\n    }, {\n      key: '_checkIsUpdateDates',\n      value: function _checkIsUpdateDates(direction, translateY) {\n        return direction === 1 ? this.currentIndex * DATE_HEIGHT + DATE_HEIGHT / 2 < -translateY : this.currentIndex * DATE_HEIGHT - DATE_HEIGHT / 2 > -translateY;\n      }\n\n      /**\n       * 清除对象的transition样式\n       * @param  {Dom}     obj     指定的对象\n       * @return {undefined}\n       */\n    }, {\n      key: '_clearTransition',\n      value: function _clearTransition(obj) {\n        addPrefixCss(obj, {\n          transition: ''\n        });\n      }\n\n      /**\n       * 滑动到下一日期\n       * @param  {number} direction 滑动方向\n       * @return {undefined}\n       */\n    }, {\n      key: '_moveToNext',\n      value: function _moveToNext(direction) {\n        var date = this.state.dates[MIDDLE_INDEX];\n        var _props = this.props,\n          max = _props.max,\n          min = _props.min;\n        if (direction === -1 && date.getTime() < min.getTime() && this.moveDateCount) {\n          this._updateDates(1);\n        } else if (direction === 1 && date.getTime() > max.getTime() && this.moveDateCount) {\n          this._updateDates(-1);\n        }\n        this._moveTo(this.refs.scroll, this.currentIndex);\n      }\n\n      /**\n       * 添加滑动动画\n       * @param  {DOM} obj   DOM对象\n       * @param  {number} angle 角度\n       * @return {undefined}\n       */\n    }, {\n      key: '_moveTo',\n      value: function _moveTo(obj, currentIndex) {\n        var _this3 = this;\n        this.animating = true;\n        addPrefixCss(obj, {\n          transition: 'transform .2s ease-out'\n        });\n        this.setState({\n          translateY: -currentIndex * DATE_HEIGHT\n        });\n\n        // NOTE: There is no transitionend, setTimeout is used instead.\n        setTimeout(function () {\n          _this3.animating = false;\n          _this3.props.onSelect(_this3.state.dates[MIDDLE_INDEX]);\n          _this3._clearTransition(_this3.refs.scroll);\n        }, 200);\n      }\n    }, {\n      key: 'handleStart',\n      value: function handleStart(event) {\n        this.touchY = !isUndefined(event.targetTouches) && !isUndefined(event.targetTouches[0]) ? event.targetTouches[0].pageY : event.pageY;\n        this.translateY = this.state.translateY;\n        this.moveDateCount = 0;\n      }\n    }, {\n      key: 'handleMove',\n      value: function handleMove(event) {\n        var touchY = !isUndefined(event.targetTouches) && !isUndefined(event.targetTouches[0]) ? event.targetTouches[0].pageY : event.pageY;\n        var dir = touchY - this.touchY;\n        var translateY = this.translateY + dir;\n        var direction = dir > 0 ? -1 : 1;\n\n        // 日期最小值，最大值限制\n        var date = this.state.dates[MIDDLE_INDEX];\n        var _props2 = this.props,\n          max = _props2.max,\n          min = _props2.min;\n        if (date.getTime() < min.getTime() || date.getTime() > max.getTime()) {\n          return;\n        }\n\n        // 检测是否更新日期列表\n        if (this._checkIsUpdateDates(direction, translateY)) {\n          this.moveDateCount = direction > 0 ? this.moveDateCount + 1 : this.moveDateCount - 1;\n          this._updateDates(direction);\n        }\n        this.setState({\n          translateY: translateY\n        });\n      }\n    }, {\n      key: 'handleEnd',\n      value: function handleEnd(event) {\n        var touchY = event.pageY || event.changedTouches[0].pageY;\n        var dir = touchY - this.touchY;\n        var direction = dir > 0 ? -1 : 1;\n        this._moveToNext(direction);\n      }\n\n      /**\n       * 滑动日期选择器触屏事件\n       * @param  {Object} event 事件对象\n       * @return {undefined}\n       */\n    }, {\n      key: 'handleContentTouch',\n      value: function handleContentTouch(event) {\n        event.preventDefault();\n        if (this.animating) return;\n        if (event.type === 'touchstart') {\n          this.handleStart(event);\n        } else if (event.type === 'touchmove') {\n          this.handleMove(event);\n        } else if (event.type === 'touchend') {\n          this.handleEnd(event);\n        }\n      }\n\n      /**\n       * 滑动日期选择器鼠标事件\n       * @param  {Object} event 事件对象\n       * @return {undefined}\n       */\n    }, {\n      key: 'handleContentMouseDown',\n      value: function handleContentMouseDown(event) {\n        if (this.animating) return;\n        this.handleStart(event);\n        document.addEventListener('mousemove', this.handleContentMouseMove);\n        document.addEventListener('mouseup', this.handleContentMouseUp);\n      }\n    }, {\n      key: 'handleContentMouseMove',\n      value: function handleContentMouseMove(event) {\n        if (this.animating) return;\n        this.handleMove(event);\n      }\n    }, {\n      key: 'handleContentMouseUp',\n      value: function handleContentMouseUp(event) {\n        if (this.animating) return;\n        this.handleEnd(event);\n        document.removeEventListener('mousemove', this.handleContentMouseMove);\n        document.removeEventListener('mouseup', this.handleContentMouseUp);\n      }\n\n      /**\n       * 渲染一个日期DOM对象\n       * @param  {Object} date date数据\n       * @return {Object}      JSX对象\n       */\n    }, {\n      key: 'renderDatepickerItem',\n      value: function renderDatepickerItem(date, index) {\n        var className = date < this.props.min || date > this.props.max ? 'disabled' : '';\n        var formatDate = void 0;\n        if (isFunction(this.props.format)) {\n          formatDate = this.props.format(date);\n        } else {\n          formatDate = convertDate(date, this.props.format);\n        }\n        return React__default.createElement('li', {\n          key: index,\n          className: className\n        }, formatDate);\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this4 = this;\n        var scrollStyle = formatCss({\n          transform: 'translateY(' + this.state.translateY + 'px)',\n          marginTop: this.state.marginTop\n        });\n        return React__default.createElement('div', {\n          className: 'datepicker-col-1'\n        }, React__default.createElement('div', {\n          ref: function ref(viewport) {\n            return _this4.viewport = viewport;\n          } // eslint-disable-line\n          ,\n          className: 'datepicker-viewport'\n        }, React__default.createElement('div', {\n          className: 'datepicker-wheel'\n        }, React__default.createElement('ul', {\n          ref: 'scroll',\n          className: 'datepicker-scroll',\n          style: scrollStyle\n        }, this.state.dates.map(this.renderDatepickerItem)))));\n      }\n    }]);\n    return DatePickerItem;\n  }(React.Component);\n\n  /**\n   * 默认属性\n   */\n  var defaultProps = {\n    isPopup: true,\n    isOpen: false,\n    theme: 'default',\n    value: new Date(),\n    min: new Date(1970, 0, 1),\n    max: new Date(2050, 0, 1),\n    showFooter: true,\n    showHeader: true,\n    showCaption: false,\n    dateConfig: {\n      'year': {\n        format: 'YYYY',\n        caption: 'Year',\n        step: 1\n      },\n      'month': {\n        format: 'M',\n        caption: 'Mon',\n        step: 1\n      },\n      'date': {\n        format: 'D',\n        caption: 'Day',\n        step: 1\n      }\n    },\n    headerFormat: 'YYYY/MM/DD',\n    confirmText: '完成',\n    cancelText: '取消',\n    onChange: function onChange() {},\n    onSelect: function onSelect() {},\n    onCancel: function onCancel() {}\n  };\n\n  /**\n   * 日期配置\n   */\n  var dateConfigMap = {\n    'year': {\n      format: 'YYYY',\n      caption: 'Year',\n      step: 1\n    },\n    'month': {\n      format: 'M',\n      caption: 'Mon',\n      step: 1\n    },\n    'date': {\n      format: 'D',\n      caption: 'Day',\n      step: 1\n    },\n    'hour': {\n      format: 'hh',\n      caption: 'Hour',\n      step: 1\n    },\n    'minute': {\n      format: 'mm',\n      caption: 'Min',\n      step: 1\n    },\n    'second': {\n      format: 'hh',\n      caption: 'Sec',\n      step: 1\n    }\n  };\n\n  /**\n   * @module DatePicker Component\n   */\n\n  /**\n   * 大写首字母\n   * @param {String} 字符串 \n   */\n  var capitalize = function capitalize(_ref) {\n    var _ref2 = toArray(_ref),\n      first = _ref2[0],\n      rest = _ref2.slice(1);\n    return first.toUpperCase() + rest.join('');\n  };\n\n  /**\n   * 判断数组\n   * @param {any} val \n   */\n  var isArray = function isArray(val) {\n    return Object.prototype.toString.apply(val) === '[object Array]';\n  };\n\n  /**\n   * Class DatePicker Component Class\n   * @extends Component\n   */\n\n  var DatePicker = function (_Component) {\n    inherits(DatePicker, _Component);\n    function DatePicker(props) {\n      classCallCheck(this, DatePicker);\n      var _this = possibleConstructorReturn(this, (DatePicker.__proto__ || Object.getPrototypeOf(DatePicker)).call(this, props));\n      _this.state = {\n        value: nextDate(_this.props.value)\n      };\n      if ('dateFormat' in props) {\n        console.warn('dateFormat已经被弃用, 请使用dateConfig属性配置');\n      }\n      if ('dateSteps' in props) {\n        console.warn('dateSteps已经被弃用, 请使用dateConfig属性配置');\n      }\n      if ('showFormat' in props) {\n        console.warn('headerFormat, 请使用dateConfig属性');\n      }\n      _this.handleFinishBtnClick = _this.handleFinishBtnClick.bind(_this);\n      _this.handleDateSelect = _this.handleDateSelect.bind(_this);\n      return _this;\n    }\n    createClass(DatePicker, [{\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(nextProps) {\n        // update value of state\n        var date = nextDate(nextProps.value);\n        if (date.getTime() !== this.state.value.getTime()) {\n          this.setState({\n            value: date\n          });\n        }\n      }\n\n      /**\n       * When you swipe two datepickeritems at the same time.\n       * Prevent dates from going out.\n       */\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate() {\n        var value = this.state.value;\n        var _props = this.props,\n          min = _props.min,\n          max = _props.max;\n        if (value.getTime() > max.getTime()) {\n          this.setState({\n            value: max\n          });\n        }\n        if (value.getTime() < min.getTime()) {\n          this.setState({\n            value: min\n          });\n        }\n      }\n\n      /**\n       * Optimization component, Prevents unnecessary rendering\n       * Only props or state change or value before re-rendering\n       *\n       * @param  {Object} nextProps next props\n       * @param  {Object} nextState next state\n       * @return {Boolean}          Whether re-rendering\n       */\n    }, {\n      key: 'shouldComponentUpdate',\n      value: function shouldComponentUpdate(nextProps, nextState) {\n        var date = nextDate(nextState.value);\n        return date.getTime() !== this.state.value.getTime() || PureRender.shouldComponentUpdate(nextProps, nextState, this.props, this.state);\n      }\n\n      /**\n       * 点击完成按钮事件\n       * @return {undefined}\n       */\n    }, {\n      key: 'handleFinishBtnClick',\n      value: function handleFinishBtnClick() {\n        this.props.onSelect(this.state.value);\n      }\n\n      /**\n       * 选择下一个日期\n       * @return {undefined}\n       */\n    }, {\n      key: 'handleDateSelect',\n      value: function handleDateSelect(value) {\n        var _this2 = this;\n        this.setState({\n          value: value\n        }, function () {\n          _this2.props.onChange(value);\n        });\n      }\n\n      /**\n       * 格式化dateConfig\n       * @param {*} dataConfig dateConfig属性\n       */\n    }, {\n      key: 'normalizeDateConfig',\n      value: function normalizeDateConfig(dataConfig) {\n        var configList = [];\n        if (isArray(dataConfig)) {\n          for (var i = 0; i < dataConfig.length; i++) {\n            var _value = dataConfig[i];\n            if (typeof _value === 'string') {\n              var lowerCaseKey = _value.toLocaleLowerCase();\n              configList.push(_extends({}, dateConfigMap[lowerCaseKey], {\n                type: capitalize(lowerCaseKey)\n              }));\n            }\n          }\n        } else {\n          for (var key in dataConfig) {\n            if (dataConfig.hasOwnProperty(key)) {\n              var _lowerCaseKey = key.toLocaleLowerCase();\n              if (dateConfigMap.hasOwnProperty(_lowerCaseKey)) {\n                configList.push(_extends({}, dateConfigMap[_lowerCaseKey], dataConfig[key], {\n                  type: capitalize(_lowerCaseKey)\n                }));\n              }\n            }\n          }\n        }\n        return configList;\n      }\n\n      /**\n       * render函数\n       * @return {Object} JSX对象\n       */\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this3 = this;\n        var _props2 = this.props,\n          min = _props2.min,\n          max = _props2.max,\n          theme = _props2.theme,\n          dateConfig = _props2.dateConfig,\n          confirmText = _props2.confirmText,\n          cancelText = _props2.cancelText,\n          headerFormat = _props2.headerFormat,\n          showHeader = _props2.showHeader,\n          showFooter = _props2.showFooter,\n          customHeader = _props2.customHeader,\n          showCaption = _props2.showCaption;\n        var value = this.state.value;\n        var themeClassName = ['default', 'dark', 'ios', 'android', 'android-dark'].indexOf(theme) === -1 ? 'default' : theme;\n        var dataConfigList = this.normalizeDateConfig(dateConfig);\n        return React__default.createElement('div', {\n          className: 'datepicker ' + themeClassName\n        }, showHeader && React__default.createElement('div', {\n          className: 'datepicker-header'\n        }, customHeader || convertDate(value, headerFormat)), showCaption && React__default.createElement('div', {\n          className: 'datepicker-caption'\n        }, dataConfigList.map(function (item, index) {\n          return React__default.createElement('div', {\n            key: index,\n            className: 'datepicker-caption-item'\n          }, item.caption);\n        })), React__default.createElement('div', {\n          className: 'datepicker-content'\n        }, dataConfigList.map(function (item, index) {\n          return React__default.createElement(DatePickerItem, {\n            key: index,\n            value: value,\n            min: min,\n            max: max,\n            step: item.step,\n            type: item.type,\n            format: item.format,\n            onSelect: _this3.handleDateSelect\n          });\n        })), showFooter && React__default.createElement('div', {\n          className: 'datepicker-navbar'\n        }, React__default.createElement('a', {\n          className: 'datepicker-navbar-btn',\n          onClick: this.handleFinishBtnClick\n        }, confirmText), React__default.createElement('a', {\n          className: 'datepicker-navbar-btn',\n          onClick: this.props.onCancel\n        }, cancelText)));\n      }\n    }]);\n    return DatePicker;\n  }(React.Component);\n  var renderSubtreeIntoContainer = ReactDOM.unstable_renderSubtreeIntoContainer;\n  var Modal = function (_Component) {\n    inherits(Modal, _Component);\n    function Modal() {\n      classCallCheck(this, Modal);\n      return possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).apply(this, arguments));\n    }\n    createClass(Modal, [{\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        this._div = document.createElement('div');\n        this._div.classList.add('Modal-Portal');\n        document.body.appendChild(this._div);\n        this.renderPortal(this.props);\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(newProps) {\n        this.renderPortal(newProps);\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        ReactDOM.unmountComponentAtNode(this._div);\n        this._div.parentNode.removeChild(this._div);\n      }\n    }, {\n      key: 'renderPortal',\n      value: function renderPortal(props) {\n        var portal = React__default.cloneElement(this.props.children, _extends({}, props, {\n          key: 'portal'\n        }), null);\n        this.portal = renderSubtreeIntoContainer(this, portal, this._div);\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        return React__default.createElement('noscript', null);\n      }\n    }]);\n    return Modal;\n  }(React.Component);\n  Modal.defaultProps = {\n    isOpen: false\n  };\n  function EnhanceDatePicker(_ref) {\n    var isOpen = _ref.isOpen,\n      props = objectWithoutProperties(_ref, ['isOpen']);\n    function onModalClose(event) {\n      if (event.target === event.currentTarget) {\n        props.onCancel();\n      }\n    }\n    return React__default.createElement('div', {\n      style: {\n        display: isOpen ? '' : 'none'\n      },\n      onClick: onModalClose,\n      className: 'datepicker-modal'\n    }, React__default.createElement(DatePicker, props));\n  }\n  function ModalDatePicker(_ref2) {\n    var isPopup = _ref2.isPopup,\n      props = objectWithoutProperties(_ref2, ['isPopup']);\n    if (!isPopup) {\n      return React__default.createElement(DatePicker, props);\n    }\n    return React__default.createElement(Modal, props, React__default.createElement(EnhanceDatePicker, null));\n  }\n  ModalDatePicker.displayName = 'MobileDatePicker';\n  ModalDatePicker.defaultProps = defaultProps;\n  return ModalDatePicker;\n});\n//# sourceMappingURL=react-mobile-datepicker.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}